import React from "react";
import { useSelector } from "react-redux";
import { setCategoryId, setCurrentPage } from "../redux/filter/filterSlice";
import {Categories, Sort, PizzaBlock, Skeleton, Pagination} from "../components";



import { fetchPizzas } from "../redux/slices/asyncActions";
import { selectPizzaData } from "../redux/slices/selectors";
import { useAppDispatch } from "../redux/store";
import { selectFilter } from "../redux/filter/selectors";

// —ç—Ç–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç - —Ç–æ–µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π chunk –° –ø–æ–º–æ—â—å—é –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–¥–≥—Ä—É–∑–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ js –∫—É—Å–æ–∫ –∫–æ–¥–∞ (–ª–µ–Ω–∏–≤–∞—è –ø–æ–¥–≥—Ä—É–∑–∫–∞ ) –±–µ—Ä—É –±–∞–Ω–¥–ª –∏ —Ä–∞–∑–±–∏–≤–∞—é –µ–≥–æ –Ω–∞ —á–∞–Ω–∫–∏ —Å –ø–æ–º–æ—â—å—é –∫–æ–¥ splitting–∞
//import("../utils/math").then(math => {
//  console.log(math.add(555, 111));
//});

export const Home: React.FC = () => {
  const dispatch = useAppDispatch();
  const { categoryId, sort, currentPage, searchValue } =
    useSelector(selectFilter); // –≤—ã—Ç–∞—Å–∫–∏–≤–∞—é —Å–≤–æ–π —Å—Ç–µ–π—Ç —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ —Ö—É–∫–∞ –æ–ø–∏—Å—ã–≤–∞—é –≤—Å—ë —á—Ç–æ –Ω—É–∂–Ω–æ —á–µ—Ä–µ–∑ . –º–Ω–µ –≤—ã—Ç–∏—â–∏—Ç—å
  const { items, status } = useSelector(selectPizzaData); //—Ñ—É–Ω-–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ pizzaSlice –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á—Ç–æ –º–µ–Ω—è–µ—Ç—Å—è –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏

  // const [sortType, setSortType] = React.useState({
  //   name: "–ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏",
  //   sortProperty: "rating",
  // }); //—Ç—É—Ç —Ö—Ä–∞–Ω–∏—Ç—Å—è –æ–±—ä–µ–∫—Ç –≤ –Ω—ë–º –µ—Å—Ç—å —Å–≤-—Ç–≤–∞ sortType –ø–µ—Ä–µ-—Å—è –≤ –∫–æ–º–µ–ø–æ–Ω–µ–Ω—Ç Sort.../>–æ–Ω –≤—ã—Ç–∞-—Å—è –∏–∑ –≤–µ–ª—å—é –∏ –≤–µ–ª—å—é —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –æ–±—ä–µ–∫—Ç –∏ —ç—Ç–æ –≤–µ–ª—å—é —Ä–µ–Ω–¥–∞—Ä—é —Ç–∞–º –≥–¥–µ —Å–ø–∞–Ω –∏ {value.name}   —Ö—Ä–∞–Ω–∏—Ç—Å—è –ª–æ–≥–∏–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏  –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ setSortType

  const onChangeCategory = React.useCallback(
    (index: number) => {
      dispatch(setCategoryId(index));
    },
    [dispatch]
  ); // c–æ–∑–¥–∞–π—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –∫–∞–∫ useEffect –∏ –±–æ–ª—å—à–µ –Ω–µ –ø–µ—Ä–µ—Å–∞–∑–¥–∞—ë—Ç—Å—è —Å–æ—Ö—Ä–∞–Ω–∏ –µ—ë –≤ –ø–∞–º—è—Ç–∏ –∏ –∫–æ–≥–¥–∞ —è —Å–∫–∞–∂—É –¥–∞–π onChangeCategory –¥–∞–π –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–º—ã–π –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
  //–º–µ—Ç–æ–¥ –º–µ–Ω—è–µ—é—â–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏—é

  const onChangePage = (page: number) => {
    dispatch(setCurrentPage(page));
  };

  // eslint-disable-next-line react-hooks/exhaustive-deps
  const getPizzas = async () => {
    const sortBy = sort.sortProperty.replace("-", ""); //replace("-") –∏–∑ —Å–≤-—Å—Ç–≤–∞ —É–¥–∞–ª–∏ - –µ—Å–ª–∏ –±—É–¥–µ—Ç
    const order = sort.sortProperty.includes("-") ? "asc" : "desc"; // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –µ—Å–ª–∏ –µ—Å—Ç—å - —Ç–æ –¥–µ–ª–∞–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∏–Ω–∞—á–µ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
    const category = categoryId > 0 ? `category=${categoryId}` : "";
    const search = searchValue ? `&search=${searchValue}` : "";

    // fetch(
    //   `https://62b41f5aa36f3a973d2c669d.mockapi.io/items?page={currentPage}&limit=4&${category}&sortBy${sortBy}&order=${order}${search}`
    // ) // –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
    //   .then((res) => res.json())
    //   .then((arr) => {
    //     setItems(arr); //–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–µ –ø–∏—Ü—Ü—ã
    //     setIsLoading(false); //–ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
    //   });

    //–±–∏–∑–Ω–µ—Å –ª–æ–≥–∏–∫–∞ –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—ç–∫–µ–Ω–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤

    // const {data} = await axios.get(
    // await –¥–æ–∂–¥–∏—Å—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ axios.get()–æ–Ω –≤–Ω—É—Ç—Ä–∏ –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º–∏—Å
    //   `https://62b41f5aa36f3a973d2c669d.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`
    // );

    dispatch(
      fetchPizzas({
        sortBy,
        order,
        category,
        search,
        currentPage: String(currentPage),
      })
    );
    window.scrollTo(0, 0);
  };

  // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –∑–∞–ø–∞—Ä—Å–∏–Ω–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–≤—è–∑–∞–Ω—ã—Ö —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–∏—Ü—Ü –∏ –≤—à–∏–≤–∞–Ω–∏–µ –∏—Ö –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É
  // React.useEffect(() => {
  //   if (isMounted.current) {
  //–µ—Å–ª–∏ –±—ã–ª 1 —Ä–µ–Ω–¥–µ—Ä  –µ—Å–ª–∏ —ç—Ç–æ –±—É–¥–µ—Ç true —Ç–æ –¥–µ–ª–∞–π –Ω–∏–∂–Ω—é—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  //     const queryString = qs.stringify({
  // –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–µ–≤—Ä–∞—â–∞—é –∏—Ö –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ—á–∫—É
  //       sortProperty: sort.sortProperty,
  //       categoryId,
  //       currentPage,
  //     });

  //     navigate(`?${queryString}`);
  //   }
  //   isMounted.current = true;
  // }, [categoryId, sort.sortProperty, currentPage]);

  // –ï—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä, —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º URl-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ä–µ–¥—É–∫—Å–µ–ø—Ä–æ–≤–µ—Ä—è—é –µ—Å—Ç—å –≤ url —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
  // React.useEffect(() => {
  // if (window.location.search) {
  //–µ—Å–ª–∏ window.location.search –µ—Å—Ç—å —Ç–æ –±—É–¥—É –ø–∞—Ä—Å–∏—Ç—å –∏–∑ –ø–∞—Ä–ø–∞–º–µ—Ç—Ä–æ–≤ –∏ –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å –≤ –æ–±—ä–µ–∫—Ç
  //const params = qs.parse(window.location.search.substring(1)) as unknown as SearchPizzaParams; // –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å ? –Ω–µ–ª—å–∑—è –¥–ª—è —ç—Ç–æ–≥–æ –ø–∏—à—É substring(1))
  // const sort = sortList.find((obj) => obj.sortProperty === params.sortBy
  //     ); // –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–±–µ–∂–∞—Ç—å—Å—è –ø–æ –∫–∞–∂–¥–æ–º—É —Å–≤–æ-—Ç–≤—É –∏ –Ω–∞–π—Ç–∏ –≤ –æ–±—ä–µ–∫—Ç–µ sortProperty —Ç–æ —á—Ç–æ –µ—Å—Ç—å –≤ params.sortProperty

  // dispatch(setFilters({
  //        searchValue: params.search,
  //        categoryId: Number(params.category),
  //        currentPage: Number (params.currentPage),
  // —Ç—É—Ç —Å–∫–∞–∑–∞–Ω–∞ –µ—Å–ª–∏ –Ω–µ –ø—Ä–∏–¥—ë—Ç undefined –ø–µ—Ä–µ–¥–∞–π sort –∏–Ω–∞—á–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏
  //        sort:sort || sortList[0],
  //       })
  //     );
  //     isSearch.current = true;
  //   }
  // }, []);
  // –ï—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä, —Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∏—Ü—Ü—ã
  React.useEffect(() => {
    //–µ—Å–ª–∏ —Å–µ–π—á–∞—Å –Ω–µ—Ç –ø–æ–∏—Å–∫–∞ —Ç–æ –¥–µ–ª–∞—é  fetchPizzas() –∑–∞–ø—Ä–æ—Å
    getPizzas();
  }, [categoryId, sort.sortProperty, searchValue, currentPage, getPizzas]); //–º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–ª–µ–¥–∏—Ç –µ—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–¥–∏ –≤ –±—ç–∫–µ–Ω–¥ –∏ –¥–µ–ª–∞–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–∏—Ü—Ü

  const pizzas = items.map((obj: any) => <PizzaBlock key={obj.id} {...obj} />);
  // –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–µ—Ä–µ–æ–±—Ä–∞–∑—É—é –≤ –º–∞—Å—Å–∏–≤ –ø–∏—Ü—Ü
  const skeletons = [...new Array(6)].map((_, index) => (
    <Skeleton key={index} />
  ));

  return (
    <div className="container">
      <div className="content__top">
        <Categories value={categoryId} onChangeCategory={onChangeCategory} />
        <Sort value={sort} />
      </div>
      <h2 className="content__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>
      {status === "error" ? (
        <div className="content__error-info">
          <h2>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòï</h2>
          <p>
            –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é,–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–∏—Ç—Å—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É
            –ø–æ–∑–∂–µ.
          </p>
        </div>
      ) : (
        <div className="content__items">
          {status === "loading" ? skeletons : pizzas}
        </div>
      )}
      <Pagination currentPage={currentPage} onChangePage={onChangePage} />
    </div>
  );
};
export default Home;

// {...obj}/>) */
